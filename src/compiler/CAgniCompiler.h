/*
  Name:         CAgniCompiler.h (definition)
  Author:       Kip Warner (Kip@TheVertigo.com)
  Description:  Routines to produce an Agni assembly listing from a script...
*/

// Multiple include protection...
#ifndef _CAGNICOMPILER_H_
#define _CAGNICOMPILER_H_

// Pre-processor directives...

    // Includes...

        // Data types...
        #include "../include/AgniPlatformSpecific.h"

        // Standard argument routines...
        #include <stdarg.h>

        // STL stuff...
        #include <string>
        #include <vector>
        #include <list>
        
        // I/O streams...
        #include <iostream>
        
        // Loader class...
        #include "CLoader.h"

        // Pre-processor class...
        #include "CPreProcessor.h"

        // Lexer class...
        #include "CLexer.h"
        
        // Parser class...
        #include "CParser.h"

// Using the standard namespace...
using namespace std;

// CAgniCompiler class definition...
class CAgniCompiler
{
    // Public stuff...
    public:

        // Data types...

            // Compiler interface parameters...
            typedef struct
            {
                // Name of compiler...
                string  sCompilerName;

                // Input file name...
                string  sInputFile;

                // Optimization level...
                uint8   ucOptimization;

                // Dump token stream to stdout...
                boolean bDumpTokenStream;

                // Output file name...
                string  sOutputFile;

                // Preprocess only...
                boolean bPreProcessOnly;

                // Stop after compilation and do not assemble...
                boolean bStop;

                // Verbosity...
                boolean bVerbose;

            }CompilerParameters;

        // Methods...

            // Constructor...
            CAgniCompiler(CompilerParameters &RequestedParameters);

            // Compile script...
            boolean Compile();

            // Deconstructor...
           ~CAgniCompiler();

    // Private stuff...
    private:

        // Includes...

            // Common structures...
            #include "../include/AgniCommonDefinitions.h"

        // Methods...

            // Be verbose, if appropriate...
            void Verbose(const string sMessage) const;

        // Variables...

            // Compiler interface parameters...
            CompilerParameters      Parameters;
            
            // Source code listing...
            vector<string>          SourceCode;
};

#endif
